#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 30    // default: 10

#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/mouse.h>

#define QTY 0       // QWERTY
#define QTY_HR 1    // QWERTY w/ HRM
#define CMK 2       // Colemak
#define CMK_HR 3    // Colemak w/ HRM
#define CMR 4       // Colemak Reversed
#define TRN 5       // Transparent (basic querty)
#define LOW 6       // Lower
#define RSE 7       // Raise
#define ADJ 8       // Adjust
#define FUN 9       // Function/Media
#define MAX 10      // Maxtend
#define MSE 11      // Mouse
#define NSP 12      // NumSpace
#define NTB 13      // NumTab

&lt {
    quick-tap-ms = <200>;
};

&caps_word {
    continue-list = <UNDERSCORE BACKSPACE DELETE SEMI>;  
    // SEMI is added here because QWERTY semicolon is letter 'O' in Colemak. Unfortunately, it doesn't automatically get shifted.
};

/ {

// This keymap has a distinct ADJUST button, so tri-layer functionality is not needed, and actually it is detrimental (doesn't work well).
//
//    conditional_layers {
//        compatible = "zmk,conditional-layers";
//        tri_layer {
//            if-layers = <LOW RSE>;
//            then-layer = <ADJ>;
//        };
//    };

    behaviors {
        mup: mute_unmute_ptt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
            hold-while-undecided-linger;
            bindings = <&kp>, <&kp>;
        };

        hl: homerow_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <200>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 36 37 38 39 40 41 46 50 51 52 53 54 55>;
            // these are all the right-side buttons
            // left-side thumb button for LOW/TAB also included, allowing Alt-TAB with left hand without tapping-term-ms delay.
            hold-trigger-on-release;
        };

        hr: homerow_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <200>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 15 16 17 18 19 20 28 29 30 31 32 33 42 43 44 45 46 47>;
            // these are all the left-side buttons
            hold-trigger-on-release;
        };
    };

//  key positions (for hold-trigger-key-positions):
//  (0) TAB       (1))Q     (2) W     (3) E     (4) R        (5) T          (6) MINUS          (7) EQUAL  (8) Y          (9) U     (10) I     (11) O    (12) P     (13) BSPC
//  (14) MAX BSPC (15) A    (16) S    (17) D    (18) F       (19) G         (20) LBKT         (21) RBKT  (22) H         (23) J     (24) K     (25) L    (26) SEMI  (27) APOS
//  (28) LSHFT    (29) Z    (30) X    (31) C    (32) V       (33) B         (34) LC(SPACE)... (35) SPACE (36) N         (37) M     (38) COMMA (39) DOT  (40) SLASH (41) RSHFT ENTER
//  (42) LCTRL    (43) LGUI (44) LALT (45) ADJ  (46) LOW TAB (47) MSE SPACE (48) none         (49) none  (50) NSP SPACE (51) RSE   (52) FUN   (53) RALT (54) RGUI  (55) RCTRL ENTER

    combos {
        compatible = "zmk,combos";
        combo_esc {
            require-prior-idle-ms = <100>;
            timeout-ms = <100>;
            key-positions = <1 2>;
            layers = <QTY QTY_HR CMK CMK_HR CMR TRN>;
            bindings = <&kp ESC>;
        };
        combo_esc2 {
            require-prior-idle-ms = <100>;
            timeout-ms = <100>;
            key-positions = <0 1>;
            layers = <QTY QTY_HR CMK CMK_HR CMR TRN>;
            bindings = <&kp ESC>;
        };
        combo_enter {
            require-prior-idle-ms = <100>;
            timeout-ms = <100>;
            key-positions = <26 27>;
            layers = <QTY QTY_HR CMK CMK_HR CMR TRN>;
            bindings = <&kp ENTER>;
        };
        combo_enter2 {
            require-prior-idle-ms = <100>;
            timeout-ms = <100>;
            key-positions = <23 24 25>;
            layers = <QTY QTY_HR CMK CMK_HR CMR TRN>;
            bindings = <&kp ENTER>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer { // Layer 0 (default_layer)
            display-name = "QWERTY";

            bindings = <
                &kp TAB      &kp Q    &kp W    &kp E    &kp R       &kp T         &kp MINUS                &kp EQUAL &kp Y         &kp U     &kp I     &kp O    &kp P     &kp BSPC
                &lt MAX BSPC &kp A    &kp S    &kp D    &kp F       &kp G         &kp LBKT                 &kp RBKT  &kp H         &kp J     &kp K     &kp L    &kp SEMI  &kp APOS
                &kp LSHFT    &kp Z    &kp X    &kp C    &kp V       &kp B         &mup LC(SPACE) LC(LS(M)) &kp SPACE &kp N         &kp M     &kp COMMA &kp DOT  &kp SLASH &mt RSHFT ENTER
                &kp LCTRL    &kp LGUI &kp LALT &mo ADJ  &lt LOW TAB &lt MSE SPACE &none                    &none     &lt NSP SPACE &mo RSE   &mo FUN   &kp RALT &kp RGUI  &mt RCTRL ENTER
            >;
        };

        qwerty_hr_layer { // Layer 1
            display-name = "QWERTY-HRM";

            bindings = <
                &kp TAB      &kp Q      &kp W      &kp E       &kp R       &kp T         &kp MINUS                &kp EQUAL &kp Y         &kp U       &kp I       &kp O      &kp P         &kp BSPC
                &lt MAX BSPC &hl LALT A &hl RALT S &hl LSHFT D &hl LCTRL F &hl LGUI G    &kp LBKT                 &kp RBKT  &hr RGUI H    &hr RCTRL J &hr RSHFT K &hr RALT L &hr LALT SEMI &kp APOS
                &kp LSHFT    &kp Z      &kp X      &kp C       &kp V       &kp B         &mup LC(SPACE) LC(LS(M)) &kp SPACE &kp N         &kp M       &kp COMMA   &kp DOT    &kp SLASH     &mt RSHFT ENTER
                &kp LCTRL    &kp LGUI   &kp LALT   &mo ADJ     &lt LOW TAB &lt MSE SPACE &none                    &none     &lt NSP SPACE &mo RSE     &mo FUN     &kp RALT   &kp RGUI      &mt RCTRL ENTER
            >;
        };

        colemak_layer { // Layer 2
            display-name = "Colemak";
    
            bindings = <
                &kp TAB      &kp Q    &kp W    &kp F    &kp P       &kp G         &kp MINUS                &kp EQUAL &kp J         &kp L     &kp U     &kp Y    &kp SEMI  &kp BSPC
                &lt MAX BSPC &kp A    &kp R    &kp S    &kp T       &kp D         &kp LBKT                 &kp RBKT  &kp H         &kp N     &kp E     &kp I    &kp O     &kp APOS
                &kp LSHFT    &kp Z    &kp X    &kp C    &kp V       &kp B         &mup LC(SPACE) LC(LS(M)) &kp SPACE &kp K         &kp M     &kp COMMA &kp DOT  &kp SLASH &mt RSHFT ENTER
                &kp LCTRL    &kp LGUI &kp LALT &mo ADJ  &lt LOW TAB &lt MSE SPACE &none                    &none     &lt NSP SPACE &mo RSE   &mo FUN   &kp RALT &kp RGUI  &mt RCTRL ENTER
            >;
        };

        colemak_hr_layer { // Layer 3
            display-name = "Colemak-HRM";

            bindings = <
                &kp TAB      &kp Q      &kp W      &kp F       &kp P       &kp G         &kp MINUS                &kp EQUAL &kp J         &kp L       &kp U       &kp Y      &kp SEMI   &kp BSPC
                &lt MAX BSPC &hl LALT A &hl RALT R &hl LSHFT S &hl LCTRL T &hl LGUI D    &kp LBKT                 &kp RBKT  &hr RGUI H    &hr RCTRL N &hr RSHFT E &hr RALT I &hr LALT O &kp APOS
                &kp LSHFT    &kp Z      &kp X      &kp C       &kp V       &kp B         &mup LC(SPACE) LC(LS(M)) &kp SPACE &kp K         &kp M       &kp COMMA   &kp DOT    &kp SLASH  &mt RSHFT ENTER
                &kp LCTRL    &kp LGUI   &kp LALT   &mo ADJ     &lt LOW TAB &lt MSE SPACE &none                    &none     &lt NSP SPACE &mo RSE     &mo FUN     &kp RALT   &kp RGUI   &mt RCTRL ENTER
            >;
        };

        revmak_hr_layer { // Layer 4
            display-name = "Colemak-reversed";
    
            bindings = <
                &kp TAB   &kp Q    &kp W    &kp K    &kp S    &kp F     &kp MINUS     &kp EQUAL   &kp O     &kp I     &kp L     &kp SEMI &kp R     &kp BSPC  
                &kp CAPS  &kp A    &kp D    &kp G    &kp E    &kp T     &kp LBKT      &kp RBKT    &kp H     &kp Y     &kp N     &kp U    &kp P     &kp APOS  
                &kp LSHFT &kp Z    &kp X    &kp C    &kp V    &kp B     &kp LC(SPACE) &kp SPACE   &kp J     &kp M     &kp COMMA &kp DOT  &kp SLASH &mt RSHFT ENTER
                &kp LCTRL &kp LGUI &kp LALT &mo ADJ  &mo LOW  &kp SPACE &none         &none       &kp SPACE &mo RSE   &mo FUN   &kp RALT &kp RGUI  &mt RCTRL ENTER
            >;
        };

        transparent_layer { // Layer 5 (basic qwerty)
            display-name = "QWERTY (base)";
    
            bindings = <
                &kp TAB   &kp Q    &kp W    &kp E    &kp R    &kp T     &kp MINUS   &kp EQUAL   &kp Y     &kp U     &kp I     &kp O    &kp P     &kp BSPC  
                &kp CAPS  &kp A    &kp S    &kp D    &kp F    &kp G     &kp LBKT    &kp RBKT    &kp H     &kp J     &kp K     &kp L    &kp SEMI  &kp APOS  
                &kp LSHFT &kp Z    &kp X    &kp C    &kp V    &kp B     &kp SPACE   &kp SPACE   &kp N     &kp M     &kp COMMA &kp DOT  &kp SLASH &mt RSHFT ENTER
                &kp LCTRL &kp LGUI &kp LALT &mo ADJ  &mo LOW  &kp SPACE &none       &none       &kp SPACE &mo RSE   &mo FUN   &kp RALT &kp RGUI  &mt RCTRL ENTER
            >;
        };

        lower_layer { // Layer 6 - a number pad on the right hand, function keys on the left
            display-name = "Lower";
    
            bindings = <
                &kp ESC   &kp F1   &kp F2   &kp F3        &kp F4   &kp F5    &trans      &trans      &kp KP_SLASH    &kp KP_N7 &kp KP_N8  &kp KP_N9    &kp KP_MINUS &kp BSPC
                &trans    &kp F6   &kp F7   &kp F8        &kp F9   &kp F10   &trans      &trans      &kp KP_ASTERISK &kp KP_N4 &kp KP_N5  &kp KP_N6    &kp KP_PLUS  &kp KP_ENTER
                &trans    &kp F11  &kp F12  &kp C_AL_CALC &none    &kp SEMI  &kp KP_NLCK &kp SPACE   &kp COLON       &kp KP_N1 &kp KP_N2  &kp KP_N3    &kp EQUAL    &trans
                &trans    &trans   &trans   &trans        &trans   &kp SPACE &none       &none       &kp SPACE       &kp KP_N0 &kp KP_DOT &kp COMMA    &none        &trans
            >;
        };

        raise_layer { // Layer 7 - a number row on the top, symbols on other rows
            display-name = "Raise";
    
            bindings = <
                &kp ESC    &kp N1   &kp N2    &kp N3    &kp N4    &kp N5    &kp MINUS   &kp EQUAL   &kp N6    &kp N7    &kp N8    &kp N9   &kp N0    &kp DEL
                &caps_word &trans   &kp LT    &kp LPAR  &kp RPAR  &kp GT    &kp LBKT    &kp RBKT    &kp PLUS  &kp MINUS &kp EQUAL &kp LBKT &kp RBKT  &kp GRAVE
                &kp LSHFT  &trans   &kp LBKT  &kp RBKT  &kp LBRC  &kp RBRC  &kp SPACE   &kp SPACE   &kp TILDE &kp UNDER &kp NUHS  &kp NUBS &kp PIPE  &kp BACKSLASH
                &kp LCTRL  &kp LGUI &kp LALT  &mo ADJ   &mo LOW   &kp BSPC  &none       &none       &kp SPACE &mo RSE   &mo FUN   &kp RALT &kp RGUI  &kp RCTRL 
            >;
        };

        adjust_layer { // Layer 8 - keymap selection, bluetooth profile, output port
            display-name = "Adjust";
    
            bindings = <
                &kp LA(TAB) &to QTY      &to QTY_HR     &to CMK      &to CMK_HR   &to CMR       &to TRN     &kp EQUAL   &trans    &trans    &trans    &trans         &trans     &kp LC(LA(DEL))
                &kp DEL     &bt BT_SEL 0 &bt BT_SEL 1   &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &kp LBKT    &kp RBKT    &trans    &trans    &trans    &trans         &trans     &trans
                &trans      &bt BT_CLR   &bt BT_CLR_ALL &out OUT_USB &out OUT_BLE &out OUT_TOG  &kp SPACE   &kp SPACE   &trans    &trans    &trans    &trans         &trans     &trans
                &bootloader &sys_reset   &studio_unlock &trans       &trans       &trans        &none       &none       &trans    &trans    &trans    &studio_unlock &sys_reset &bootloader
            >;
        };

        funmedia_layer { // Layer 9 - function keys (left), media control (right)
            display-name = "Fun/Media";
    
            bindings = <
                &kp TAB   &kp F1   &kp F2   &kp F3   &kp F4   &kp F5    &trans      &trans      &trans    &kp C_PP      &kp C_VOL_UP &kp PSCRN      &kp SLCK  &kp PAUSE_BREAK
                &kp CAPS  &kp F6   &kp F7   &kp F8   &kp F9   &kp F10   &trans      &trans      &trans    &kp C_PREV    &kp C_VOL_DN &kp C_NEXT     &trans    &trans
                &trans    &kp F11  &kp F12  &trans   &trans   &trans    &kp SPACE   &kp SPACE   &trans    &kp LC(LS(M)) &kp C_MUTE   &trans         &trans    &trans
                &trans    &trans   &trans   &trans   &trans   &kp SPACE &none       &none       &kp SPACE &trans        &trans       &studio_unlock &trans    &trans
            >;
        };

        maxtend_layer { // Layer 10 - Maxtend
            display-name = "Maxtend";

            bindings = <
                &kp TAB   &kp ESC   &msc SCRL_UP   &kp C_AC_BACK &kp C_AC_FORWARD &trans    &kp MINUS   &kp EQUAL   &kp PG_UP     &kp HOME  &kp UP     &kp END   &kp DEL   &kp INS
                &trans    &kp LALT  &msc SCRL_DOWN &kp LSHFT     &kp LCTRL        &kp LGUI  &kp LBKT    &kp RBKT    &kp PG_DN     &kp LEFT  &kp DOWN   &kp RIGHT &kp BSPC  &kp ENTER
                &kp LSHFT &kp LC(Z) &kp LC(X)      &kp LC(C)     &kp LC(V)        &kp LC(B) &kp SPACE   &kp SPACE   &trans        &trans    &trans     &trans    &kp K_APP &kp RSHFT
                &kp LCTRL &kp LGUI  &kp LALT       &mo ADJ       &mo LOW          &kp ENTER &none       &none       &kp LC(SPACE) &mo RSE   &mo FUN    &kp RALT  &kp RGUI  &kp RCTRL
            >;
        };

        mouse_layer { // Layer 11 - Mouse
            display-name = "Mouse";
     
            bindings = <
                &kp TAB   &kp ESC       &kp LC(W)     &kp LC(PG_UP) &kp LC(PG_DN) &kp LC(F) &kp MINUS   &kp EQUAL   &msc SCRL_UP   &msc SCRL_LEFT &mmv MOVE_UP   &msc SCRL_RIGHT &kp P     &kp BSPC
                &kp CAPS  &kp A         &mkp MB2      &mkp MB3      &mkp MB1      &kp G     &kp LBKT    &kp RBKT    &msc SCRL_DOWN &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &kp SEMI  &kp APOS
                &kp LSHFT &kp C_AL_LOCK &kp LC(LS(X)) &kp LC(LS(C)) &kp LC(LS(V)) &kp B     &kp SPACE   &kp SPACE   &kp N          &kp M          &kp COMMA      &kp DOT         &kp SLASH &kp RSHFT
                &kp LCTRL &kp LGUI      &kp LALT      &mo ADJ       &mo LOW       &kp SPACE &none       &none       &mkp MB1       &mo RSE        &mo FUN        &kp RALT        &kp RGUI  &kp RCTRL
            >;
        };

        numspace_layer { // Layer 12
            display-name = "NumSpace";
    
            bindings = <
                &kp TAB   &kp EXCL  &kp AT   &kp HASH &kp DLLR &kp PRCNT &kp MINUS   &kp EQUAL   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR  &kp MINUS
                &trans    &kp N1    &kp N2   &kp N3   &kp N4   &kp N5    &kp LBKT    &kp RBKT    &kp N6    &kp N7    &kp N8    &kp N9   &kp N0    &kp PLUS
                &kp LSHFT &kp MINUS &kp LBKT &kp RBKT &kp LBRC &kp RBRC  &kp SPACE   &kp SPACE   &kp LS(P) &kp P     &kp COMMA &kp DOT  &kp SLASH &mt RSHFT EQUAL
                &kp LCTRL &kp LGUI  &kp LALT &mo ADJ  &mo LOW  &kp ENTER &none       &none       &trans    &mo RSE   &mo FUN   &kp RALT &kp RGUI  &mt RCTRL ENTER
            >;
        };

        numtab_layer { // Layer 13
            display-name = "NumTab";
    
            bindings = <
                &kp TAB   &kp Q    &kp W    &kp E    &kp R    &kp T     &kp MINUS   &kp EQUAL   &kp Y     &kp U     &kp I     &kp O    &kp P     &kp BSPC  
                &kp CAPS  &kp A    &kp S    &kp D    &kp F    &kp G     &kp LBKT    &kp RBKT    &kp H     &kp J     &kp K     &kp L    &kp SEMI  &kp APOS  
                &kp LSHFT &kp Z    &kp X    &kp C    &kp V    &kp B     &kp SPACE   &kp SPACE   &kp N     &kp M     &kp COMMA &kp DOT  &kp SLASH &kp RSHFT
                &kp LCTRL &kp LGUI &kp LALT &mo ADJ  &mo LOW  &kp SPACE &none       &none       &kp SPACE &mo RSE   &mo FUN   &kp RALT &kp RGUI  &kp RCTRL 
            >;
        };

    };
};
